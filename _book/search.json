[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R4EnvChemAnalysis - PhD Course",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nIt was made for the PhD course “R programming for environmental analytical chemistry”, 6 hp, at Linköping University during spring 2024.\nThe aim with the course was to learn basic R programming, learn to write functions for the purpose of analysing enviornmental chemical data, visualise the data, and basic datamanagement creation.\nThis Quarto book has served the purpose of documenting the development during the course."
  },
  {
    "objectID": "Basics.html",
    "href": "Basics.html",
    "title": "1  Basics",
    "section": "",
    "text": "Set directory of project with setwd\n\nsetwd(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/GitHub/R4EnvChemAnalysis\")\n\nRstudio consists of four windows, top left is where the Rscript files get opened and where the code can be written and edited, bottom left is where the console can be found for writing commands. In top right can for instance the workspace be seen which shows all created objects and in the bottom right can for instance the the files in the working directory be seen, created plots, loaded packages, etc.\n\n\n\nFigure. Overview of RStudio\n\n\nFor some functions in R, different packages can be used. For example, to create more complex plots ggplot2() function can be used. To be able to use it, the ggplot2 packages needs to be first installed by install.packages(\"ggplot2\") in the console, or by goint to Tools&gt;Install Packages…&gt;search for ggplot2.\nInstallation of packages only needs to be done ones. To be able to use the functions includes in a package, it needs to be loaded for each new R session by:\n\nlibrary(\"ggplot2\")\n\nggplot2 can also be installed by installing the packages tidyverse, which contains multiple packages and load it with library():\n\nlibrary(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nObjects can easily be created by using the symbol &lt;-, and that points towards the name of the object and to write comments that can make the written code easier to interpretate # can be used:\n\n#This is a code that creates objects a which contains the sum of 2 + 5\n\na &lt;- 2 + 5\na\n\n[1] 7\n\n#It is also possible to assign vectors to objects as done for b which contains the numbers 2,3,4,5,6\n\nb &lt;- c(2:6)\nb\n\n[1] 2 3 4 5 6\n\n#Further, it is possible to use addition, subtraction, etc, on objects.\n\nc &lt;- b+a\nc\n\n[1]  9 10 11 12 13\n\nd &lt;- b*a\nd\n\n[1] 14 21 28 35 42\n\nd &lt;- d - 2\nd\n\n[1] 12 19 26 33 40\n\n\nImportant: object names cannot start with a number or contain symbols such as ^, !, $, @, +, -, /, *\n\n#2a &lt;- c(2,4)\n\n#Error: unexpected symbol in \"2a\"\n\n\n#object! &lt;- c(1:4)\n\n#Error: unexpected '!' in \"object!\"\n\n\n#However, it is possible to use \"_\" in an objects name\n\nobject_name &lt;- c(5:8)\n\n\nls()\n\n[1] \"a\"               \"b\"               \"c\"               \"d\"              \n[5] \"has_annotations\" \"object_name\"    \n\n\n\nWhen a script is running and you would like to cancel it, you can press clrl+c"
  }
]