[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "4  Project",
    "section": "",
    "text": "XXXX\nNew format of Excel-sheet to work better to import in RStudio. It includes one column with the samples name, replicate number, target compound, which adduct it was detected as, the measured Mass_To_Charge ratio (m/z), Retention time (RT), Drift time (DT), CCS, and detector count (Intensity). All the data obtained from UNIFI software.\nEach type of sample has its own sheet. Hence, the data shown in the Figure 1, are from measurements of one standard called StD B, whereas measurements of another standard has another sheet in the same Excel-file. The first sheet in the file is called Info and contains information of the samples. For example, StD B is measured in different concentrations (10, 50, 100, 300, and 500 ppb). In the data for StD B, the Sample Items are called StD_XX, where XX is the concentration. However, in Info, it is possible to find the name of the measurements (e.g. StD_10_240319), number of replicates, and which standard and concentration that was measured.\n\n\n\nFigure 1. Example of the format of the Excel sheet for imported data.\n\n\nImport libraries\n####\n\n#data_hrms &lt;- read_excel()"
  },
  {
    "objectID": "project.html#loading-of-libraries",
    "href": "project.html#loading-of-libraries",
    "title": "4  Project",
    "section": "4.1 Loading of libraries",
    "text": "4.1 Loading of libraries\n\n#Libraries\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggrepel)\nlibrary(ggpubr)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(viridis)\nlibrary(ggsci )\nlibrary(broom)\nlibrary(patchwork)"
  },
  {
    "objectID": "project.html#functions",
    "href": "project.html#functions",
    "title": "4  Project",
    "section": "4.2 Functions",
    "text": "4.2 Functions\n\n\\(MassError[ppm]=\\frac{\\textit{m/z}_{theretical}-\\mathit{m/z}_{measured}}{\\mathit{m/z}_{theoretical}}*10^6\\)\n\n\n#Function to calculate the Mass Error with three digits\nmass_error &lt;- function(mz_theoretical,mz_meaured){\n  mass_error &lt;- round((mz_theoretical-mz_meaured)/mz_theoretical*10^6, digits=3)\n  return(mass_error)\n}\n\n\n\\(SEM=\\frac{SD}{\\sqrt{N}}\\) , SD= Standard Deviation, N=number of samples\n\n\n#Function to calculate the Standard Error of the Mean (SEM)\nstderror &lt;- function(x){\n  round(sd(x, na.rm =TRUE)/sqrt(length(x)),4)\n}\n\n\nFunction for a Bar plot\n\n\n#Uses quosure for the funciton\n#bar_plot &lt;- function(dataframe, xvalue, yvalue, fillvalue, error) {\n#  xvalue &lt;- enquo(xvalue)   # Capture xvalue as a quosure\n#  yvalue &lt;- enquo(yvalue)   # Capture yvalue as a quosure\n#  fillvalue &lt;- enquo(fillvalue)   # Capture fillvalue as a quosure\n#  error &lt;- enquo(error)   # Capture error as a quosure\n  \n#  p &lt;- ggplot(data=dataframe, aes_string(x=quo_name(xvalue), y=quo_name(yvalue), fill=quo_name(fillvalue)))+\n#    geom_bar(stat = \"identity\",position=position_dodge(0.9))+\n#    geom_errorbar(aes(ymin=!!yvalue -!!error, \n#                      ymax=!!yvalue +!!error), \n#                  width=0.3, colour=\"black\", size=0.8,position=position_dodge(0.9))+\n#    scale_fill_npg()+\n#    theme_minimal()+\n#    theme(\n#      panel.background = element_rect(fill = \"white\"),  # Set white background\n#      panel.grid.major = element_blank(),  # Remove grid lines\n#      panel.grid.minor = element_blank(),  # Remove grid lines\n#      axis.text = element_text(size = 9),  # Increase font size of axis text\n#      axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n#      axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n#      axis.title.x = element_text(size = 10,face = \"bold\"),\n#      axis.text.x = element_text(color = \"black\", size = 9, angle = 45, hjust=1),  # Make x-axis text bold\n#      axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n#      axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n#      plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n#      legend.text=element_text(size=9),\n#      legend.background = element_rect(fill=\"white\",\n#                                     size=0.5, linetype=\"solid\", \n#                                     colour =\"black\"),\n#      legend.title = element_blank(),\n#  )\n#return(p)\n#}\n\n\n#uses embrace-operator ({{ }}) from Tidyverse insetad of quosure\nbar_plot &lt;- function(dataframe, xvalue, yvalue, fillvalue, error) {\n\n  p &lt;- ggplot(data=dataframe, aes(x={{ xvalue }}, y={{ yvalue }}, fill={{ fillvalue }}))+\n    geom_bar(stat = \"identity\",position=position_dodge(0.9))+\n    geom_errorbar(aes(ymin={{ yvalue}} -{{error }}, \n                      ymax={{ yvalue }} +{{ error }}), \n                  width=0.3, colour=\"black\", size=0.8,position=position_dodge(0.9))+\n    scale_fill_npg()+\n    theme_minimal()+\n    theme(\n      panel.background = element_rect(fill = \"white\"),  # Set white background\n      panel.grid.major = element_blank(),  # Remove grid lines\n      panel.grid.minor = element_blank(),  # Remove grid lines\n      axis.text = element_text(size = 9),  # Increase font size of axis text\n      axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n      axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n      axis.title.x = element_text(size = 10,face = \"bold\"),\n      axis.text.x = element_text(color = \"black\", size = 9, angle = 45, hjust=1),  # Make x-axis text bold\n      axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n      axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n      plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n      legend.text=element_text(size=9),\n      legend.background = element_rect(fill=\"white\",\n                                     size=0.5, linetype=\"solid\", \n                                     colour =\"black\"),\n      legend.title = element_blank(),\n  )\nreturn(p)\n}\n\n\nFunction for a Scatter plot\n\n\n#uses embrace-operator ({{ }}) from Tidyverse insetad of quosure\nscatter_plot &lt;- function(dataframe, xvalue, yvalue, colorvalue, error) {\n  #xvalue &lt;- enquo(xvalue)   # Capture xvalue as a quosure\n  #yvalue &lt;- enquo(yvalue)   # Capture yvalue as a quosure\n  #colorvalue &lt;- enquo(colorvalue)   # Capture colorvalue as a quosure\n  #error &lt;- enquo(error)   # Capture error as a quosure\n  \n  p &lt;- ggplot(data=dataframe, aes(x={{xvalue}}, y={{yvalue}}, color={{colorvalue}}))+\n    geom_point()+\n    geom_errorbar(aes(ymin = {{yvalue}} - {{error}}, \n                      ymax = {{yvalue}} + {{error}}),\n                  width=0.7, colour=\"black\", size=0.7) +\n    \n    scale_color_viridis(discrete=TRUE)+\n    theme_minimal()+\n    theme(\n      panel.background = element_rect(fill = \"white\"),  # Set white background\n      panel.grid.major = element_blank(),  # Remove grid lines\n      panel.grid.minor = element_blank(),  # Remove grid lines\n      axis.text = element_text(size = 9),  # Increase font size of axis text\n      axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n      axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n      axis.title.x = element_text(size = 10,face = \"bold\"),\n      axis.text.x = element_text(color = \"black\", size = 9, angle = 45, hjust=1),  # Make x-axis text bold\n      axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n      axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n      plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n      legend.text=element_text(size=9),\n      legend.background = element_rect(fill=\"white\",\n                                     size=0.5, linetype=\"solid\", \n                                     colour =\"black\"),\n      legend.title = element_blank(),\n    )\n####### TRIED TO MAKE ERROR AN OPTIONAL, SO IT ONLY PLOTS ERRORBARS IF ERROR IS NOT NULL ##########\n  #if(!is.null(error)) {\n    #error &lt;- enquo(error)   # Capture error as a quosure\n    #p &lt;- p + geom_errorbar(aes(ymin = !!yvalue - !!error, \n    #                           ymax = !!yvalue + !!error),\n    #                       width=0.7, colour=\"black\", size=0.7)\n    #}\n####### DOES NOT WORK #############################\n  return(p)\n}\n\n\nCalculate concentration from calibration curve: \\(Concentration =\\frac{Response-Intercept}{Slope}\\)\n\n\ncal_conc &lt;- function(response, intercept, slope){\n  concentration &lt;- (response-intercept)/slope\n  return(concentration)\n}"
  },
  {
    "objectID": "project.html#target-compounds-from-unifi",
    "href": "project.html#target-compounds-from-unifi",
    "title": "4  Project",
    "section": "4.3 Target Compounds from UNIFI",
    "text": "4.3 Target Compounds from UNIFI\nThis section is for data analysis when target compounds data (e.g. m/z, RT, DT, CCS, and intensity) has been obtained directly from UNIFI. Hence, the data has NOT been processed with e.g MS-DIAL, so there is not need to “find” the target compounds in a long list of features.\nImporting the data\nTwo data sets are imported, one containing the measured data (data_hrms) and one with information of the target compounds (target_compounds), which contains the molecular formula, monoisotopic mass, and theoretical mass of the different adducts ([M+H]+, [M+Na]+, [M+NH4]+, and [M-H]-).\n\ndata_hrms &lt;- read_excel(\"Data_HRMS_Format_TEST.xlsx\", \n    sheet = \"Data_StDB\")\n#glimpse(data_hrms)\ntarget_compounds &lt;- read_excel(\"Target_Compounds_StDB.xlsx\")\n#glimpse(target_compounds)\n\nCalculate the Mass Accuracy with the mass_error() function depending on which adduct the compound was found as and add the results in the data_hrms data frame.\n\n#If the compounds in target_compounds and data_hrms are in the same order\ndata_hrms &lt;- data_hrms |&gt; \n    mutate(Mass_accuracy=case_when(Adduct == \"[M+H]+\" ~ mass_error(target_compounds$`[M+H]+`, Mass_to_Charge_Ratio),\n                              Adduct == \"[M+Na]+\" ~ mass_error(target_compounds$`[M+Na]+`, Mass_to_Charge_Ratio),\n                              Adduct == \"[M+NH4]+\" ~ mass_error(target_compounds$`[M+NH4]+`, Mass_to_Charge_Ratio),\n                             Adduct == \"[M-H]-\" ~ mass_error(target_compounds$`[M-H]-`,Mass_to_Charge_Ratio) )) \n\n\n#If the compounds in target_compounds and data_hrms are not in the same order, can join the two data frames according to the compounds name and then calculate mass accuracy\ndata_hrms &lt;- inner_join(data_hrms, target_compounds, by = c(\"Compound\" = \"Item name\")) |&gt; \n    mutate(Mass_accuracy=case_when(Adduct == \"[M+H]+\" ~ mass_error(`[M+H]+`, Mass_to_Charge_Ratio),\n                              Adduct == \"[M+Na]+\" ~ mass_error(`[M+Na]+`, Mass_to_Charge_Ratio),\n                              Adduct == \"[M+NH4]+\" ~ mass_error(`[M+NH4]+`, Mass_to_Charge_Ratio),\n                             Adduct == \"[M-H]-\" ~ mass_error(`[M-H]-`,Mass_to_Charge_Ratio) )) |&gt; \n  select(Sample_Item, Replicate, Compound, Adduct, Mass_to_Charge_Ratio, Retention_Time, Drift_Time, CCS, Detector_Counts, Mass_accuracy)\n\nCalculate the Average and SEM of m/z, Mass Accuracy, RT, DT, CCS, and intensity for each compound in each type of sample (Sample Item) with the mean() and SEM() functions.\n\ndata_hrms$Sample_Item &lt;- factor(data_hrms$Sample_Item, levels=unique(data_hrms$Sample_Item)) #Convert Sample_Item to factor to be able to keep the original order of the data\n\ndata_hrms_average &lt;-data_hrms |&gt;  filter(!is.na(Mass_to_Charge_Ratio))|&gt; \n  group_by(Sample_Item, Compound) |&gt; \n  summarise(Average_MZ=round(mean(Mass_to_Charge_Ratio, na.rm =TRUE),digits=3),\n            SEM_MZ=stderror(Mass_to_Charge_Ratio),\n            Average_MassAccuracy=round(mean(Mass_accuracy, na.rm =TRUE),digits=3),\n            SEM_MassAccuracy=stderror(Mass_accuracy),\n            Average_RT=round(mean(Retention_Time, na.rm =TRUE),digits=3),\n            SEM_RT=stderror(Retention_Time),\n            Average_DT=round(mean(Drift_Time, na.rm =TRUE),digits=3),\n            SEM_DT=stderror(Drift_Time),\n            Average_CCS=round(mean(CCS, na.rm =TRUE),digits=3),\n            SEM_CCS=stderror(CCS),\n            Average_intensity=round(mean(Detector_Counts, na.rm =TRUE),digits=3),\n            SEM_intensity=stderror(Detector_Counts)) |&gt; \n  ungroup() |&gt; \n  group_by(Compound)\n\n`summarise()` has grouped output by 'Sample_Item'. You can override using the\n`.groups` argument.\n\n#glimpse(data_hrms_average)\n\nPlots using the bar_plot function.\n\np1 &lt;- bar_plot(data_hrms_average, Compound, Average_MZ, Sample_Item, SEM_MZ)+\n  labs(y = \"Average Mass-To-Charge Ratio\", x=\"\")+\n  scale_y_continuous(expand = expansion(add=c(0,30)))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np2 &lt;- bar_plot(data_hrms_average, Compound, Average_RT, Sample_Item, SEM_RT)+\n  labs(y = \"Average Retention time [min]\", x=\"\")+\n  scale_y_continuous(expand = expansion(add=c(0,1)))\n\n#(p1 / p2) #need patchwork package for this\n\nbar_plot(data_hrms_average, Compound, Average_DT, Sample_Item, SEM_DT)+\n  labs(y = \"Average Drift time [ms]\", x=\"\")+\n  scale_y_continuous(expand = expansion(add=c(0,0.11)))\n\n\n\nbar_plot(data_hrms_average, Compound, Average_CCS, Sample_Item, SEM_CCS)+\n  labs(y = expression(\"Average CCS [Å\"^\"2\"~\"]\"), x=\"\")+\n  scale_y_continuous(expand = expansion(add=c(0,10)))\n\n\n\nbar_plot(data_hrms_average, Compound, Average_intensity, Sample_Item, SEM_intensity)+\n  labs(y = \"Average Intensity\", x=\"\")+\n  scale_y_continuous(expand = expansion(add=c(0,100)))\n\n\n\n\nPlots using the scatter_plot function.\n\nscatter_plot(data_hrms_average, Average_MZ, Average_RT, Compound, SEM_RT)+\n  geom_text_repel(data=data_hrms_average |&gt; distinct(Compound, .keep_all=TRUE),\n                   aes(label=Compound),\n                     size = 2.5,\n                     point.padding = NA, # additional padding around each point\n                     min.segment.length = 0, # draw all line segments\n                     force=2,\n                     nudge_x=3, nudge_y=0.1,\n                     color=\"black\"\n                   )+\n  labs(y = \"Average Retention time [min]\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\")))+\n  theme(legend.position = \"none\")\n\n\n\nscatter_plot(data_hrms_average, Average_MZ, Average_CCS, Compound, SEM_CCS)+\n  labs(y = \"Average Drift time [min]\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\")))\n\n\n\n\n\nIf measured samples are standards of different concentrations, calibration curves can be plotted.\nPlotting calibration curves of the concentration vs intensities to be able to visually see the regression. However, to obtain the Standard Error of the Slope and the Slope for calculation of Limit of Detection (LOD), no calibration curve needs to be plotted.\n\n#End of the Sample_Item-names contains the concentrations in ppb, which is added to a new column\ndata_hrms_average &lt;- data_hrms_average |&gt; \n  mutate(Concentration = as.numeric(str_extract(Sample_Item, \"\\\\d+\")))\n\n#Plot the calibrations curves for each compounds in separate plots. To each calibration curve is the R^2 added\nggplot(data=data_hrms_average, mapping=aes(x=Concentration, y=Average_intensity, colour=Compound))+\n  geom_errorbar(aes(ymin=Average_intensity-SEM_intensity, ymax=Average_intensity+SEM_intensity), width=3, size=0.6, colour=\"black\")+\n  geom_point() +\n  geom_smooth(method=\"lm\", \n              size=0.6, \n              se=FALSE, \n              linetype=\"dashed\",\n              fullrange=TRUE,\n              aes(color=Compound))+ \n  stat_cor(aes(label=..rr.label..), label.x=200, size=3, colour=\"black\", r.digits = 5)+ #adds R^2\n  facet_wrap(~ Compound, scales=\"free\")+ #separates the plots for each compound\n  scale_color_viridis(discrete=TRUE)+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.position = \"none\"\n)+\n  labs(y = \"Average Intensity\", x=\"Concentration [ppb]\")\n\nWarning: The dot-dot notation (`..rr.label..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(rr.label)` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Computation failed in `stat_cor()`.\nCaused by error in `cor.test.default()`:\n! not enough finite observations\n\n\n\n\n# Obtain the Slope (a) and Intercept (b) for each calibration curve (y=ax+b)\nregression_1 &lt;- data_hrms_average |&gt; \n  group_by(Compound)  |&gt; \n  do(tidy(lm(Average_intensity ~ Concentration, data = .)))  |&gt; \n  filter(term %in% c(\"Concentration\", \"(Intercept)\"))  |&gt; \n  mutate(parameter = if_else(term == \"Concentration\", \"Slope\", \"Intercept\"))  |&gt; \n  select(Compound, parameter, estimate)  |&gt; \n  spread(parameter, estimate)\n\n##### Obtain the Slope (a) for each calibration curve (y=ax+b)#####\n#regression_1 &lt;- data_hrms_average |&gt; \n#  group_by(Compound) |&gt; \n#  do(tidy(lm(Average_intensity ~ Concentration, data = .)))  |&gt; \n#  filter(term == \"Concentration\")  |&gt; \n#  select(Compound, Slope = estimate)\n\n# Obtain the StDErrorY for each calibration curve\nregression_2 &lt;- data_hrms_average |&gt; \n   group_by(Compound) |&gt; \n   do(augment(lm(Average_intensity ~ Concentration, data = .))) |&gt; \n   summarise(StdErrorY = sd(.resid))  |&gt; \n   select(Compound, StdErrorY)\n# Combines the two data frames with Slope and StDErrorY, and calculate the LOD and LOQ for them\nregression_data_hrms_average &lt;- regression_1 |&gt; \n  inner_join(regression_2, join_by(Compound)) |&gt;   \n  mutate(`LOD_[ppb]`= round(3.3*StdErrorY/Slope,digits=3)) |&gt; \n  mutate(`LOQ_[ppb]`= round(10*StdErrorY/Slope,digits=3))\n\n\n#Calculate the concentration from the calibration curve for selected Sample_Item and Replicate\n\nsample &lt;- \"StD_300\"\nnr_replicate &lt;- 1\n\ncal_conc_data_hrms &lt;- data_hrms |&gt; \n  filter(Sample_Item == sample & Replicate == nr_replicate) |&gt;\n  semi_join(regression_data_hrms_average, by = \"Compound\") |&gt; \n  mutate(Calculated_Conc = cal_conc(Detector_Counts, regression_data_hrms_average$Intercept, regression_data_hrms_average$Slope))\n\n\n#Create a table with the calculated concentrations\ngt_tab &lt;- cal_conc_data_hrms |&gt; filter(!is.na(Calculated_Conc))|&gt; \n  select(Compound, Mass_to_Charge_Ratio, Retention_Time, Drift_Time, CCS, Calculated_Conc) |&gt; \n  gt() |&gt;\n  tab_options(table.font.color=\"black\")|&gt; \n  tab_header(\n      title=md(\"**Calculated Concentrations**\"), #**to make bold\n      ) |&gt; \n  fmt_number(columns = c(Mass_to_Charge_Ratio, Retention_Time, Drift_Time, CCS, Calculated_Conc), decimals=3) |&gt;  #to formate numbers, can select specific columns to display certain nr. of deicmals for example. \n  cols_label(\n    Mass_to_Charge_Ratio = md(\"*m/z*\"),\n    Retention_Time = md(\"Retention Time &lt;br&gt;[min]\"),\n    Drift_Time = md(\"Drift Time &lt;br&gt;[ms]\"),\n    CCS = md(\"Å^2^\"),\n    Calculated_Conc = md(\"Calculated Concentrations\")\n  ) \ngt_tab \n\n\n\n\n\n  \n    \n      Calculated Concentrations\n    \n    \n    \n      Compound\n      m/z\n      Retention Time [min]\n      Drift Time [ms]\n      Å2\n      Calculated Concentrations\n    \n  \n  \n    2-aminobenzothiazole\n151.031\n1.970\n2.110\n126.520\n318.219\n    4-Androstene-3,17-dione\n309.181\n4.560\n5.330\n199.330\n280.012\n    Acesulfame\n161.986\n0.500\n2.030\n122.290\n339.575\n    Avobenzone\n333.144\n6.270\n5.410\n201.040\n346.053\n    Benzophenone\n183.079\n4.630\n2.610\n136.290\n279.538\n    Estrone\n271.168\n4.590\n3.900\n164.320\n354.133\n    Ethylparaben\n165.055\n3.680\n2.510\n132.870\n335.132\n    Hydrocortisone\n363.215\n3.990\n4.910\n187.490\n320.619\n    Metformin\n130.107\n0.430\n1.970\n124.750\n310.067\n    Octocrylene\n379.237\n6.100\n5.720\n208.560\n344.356\n    Oleamide\n304.260\n6.620\n4.750\n184.470\n333.817\n    Oxybenzone\n251.066\n5.010\n3.890\n164.410\n417.382\n    Pregnenolone\n317.247\n5.390\n4.560\n179.710\n272.946\n    Progesterone\n337.212\n5.160\n5.640\n206.850\n332.579\n    Testosterone\n289.215\n4.700\n4.240\n172.150\n303.769\n  \n  \n  \n\n\n\n#gt_tab |&gt; gtsave(filename = \"tab_1.html\") #saves the table in HTML format\n#gt_tab |&gt; gtsave(filename = \"tab_1.tex\") #saves the table in LaTEX format\n#gt_tab |&gt; gtsave(filename = \"tab_1.docx\") #saves the table in WORD format"
  },
  {
    "objectID": "project.html#processed-data-ms-dial",
    "href": "project.html#processed-data-ms-dial",
    "title": "4  Project",
    "section": "4.4 Processed Data MS-DIAL",
    "text": "4.4 Processed Data MS-DIAL\nThis section is for data that has been exported from UNIFI and then been processed in MS-DIAL. Hence, the output file contains many features and the target compounds needs to be extracted from the processed output file by comparison with expected data (e.g. theoretical m/z of different adducts).\n\nData_HRMS_Format_StDB_A &lt;- read_excel(\"~/01_Projects/02_NM-CT-stdAB_Collaboration_CCS_MEASURMENT_2024/NMCTAB_2024_03_21_MSconvert_MSDIAL/Data_HRMS_Format_StDB.xlsx\", \n    sheet = \"Data_StDB_A_MSDIAL_1001_2\")\n\n\nData_HRMS_Format_StDB_A |&gt; mutate(diff_CCS = (`UNIFI ccs`-CCS)/`UNIFI ccs`*100) |&gt; \n  ggplot(aes(x=Mass_to_Charge_Ratio, y=diff_CCS))+\n  geom_point()\n\nWarning: Removed 21 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n  #xlim(190,350)\n\nggplot(Data_HRMS_Format_StDB_A, aes(x=Mass_to_Charge_Ratio,y=CCS, label=Compound))+\n  geom_point()+\n  geom_point(aes(x=Mass_to_Charge_Ratio,y=`UNIFI ccs`, label=Compound), color=\"red\")\n\nWarning in geom_point(aes(x = Mass_to_Charge_Ratio, y = `UNIFI ccs`, label = Compound), : Ignoring unknown aesthetics: label\nRemoved 21 rows containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 21 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n  geom_label_repel(size = 2.5,\n                   point.padding = NA, # additional padding around each point\n                   min.segment.length = 0, # draw all line segments\n                   force=2,\n                   fill= alpha(\"white\",0),\n                   nudge_x=2, nudge_y=2\n                   )\n\ngeom_label_repel: parse = FALSE, box.padding = 0.25, label.padding = 0.25, point.padding = NA, label.r = 0.15, label.size = 0.25, min.segment.length = 0, arrow = NULL, na.rm = FALSE, force = 2, force_pull = 1, max.time = 0.5, max.iter = 10000, max.overlaps = 10, nudge_x = 2, nudge_y = 2, xlim = c(NA, NA), ylim = c(NA, NA), direction = both, seed = NA, verbose = FALSE\nstat_identity: na.rm = FALSE\nposition_nudge_repel"
  },
  {
    "objectID": "raw_ims_hrms.html",
    "href": "raw_ims_hrms.html",
    "title": "5  Raw Data - IMS-HRMS",
    "section": "",
    "text": "6 Raw Data - IMS-HRMS"
  },
  {
    "objectID": "raw_ims_hrms.html#a-look-into-the-mzml-data-structure",
    "href": "raw_ims_hrms.html#a-look-into-the-mzml-data-structure",
    "title": "5  Raw Data - IMS-HRMS",
    "section": "6.1 A look into the mzml data structure",
    "text": "6.1 A look into the mzml data structure\nhttps://rformassspectrometry.github.io/book/sec-raw.html\nLoading libraries\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"tidyverse\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'tidyverse'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"factoextra\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling package(s) 'factoextra'\n\n\nalso installing the dependencies 'emmeans', 'flashClust', 'leaps', 'multcompView', 'FactoMineR'\n\n\npackage 'emmeans' successfully unpacked and MD5 sums checked\npackage 'flashClust' successfully unpacked and MD5 sums checked\npackage 'leaps' successfully unpacked and MD5 sums checked\npackage 'multcompView' successfully unpacked and MD5 sums checked\npackage 'FactoMineR' successfully unpacked and MD5 sums checked\npackage 'factoextra' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"msdata\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'msdata'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"mzR\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'mzR'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"rhdf5\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling package(s) 'rhdf5'\n\n\nalso installing the dependency 'rhdf5filters'\n\n\npackage 'rhdf5filters' successfully unpacked and MD5 sums checked\npackage 'rhdf5' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"rpx\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling package(s) 'rpx'\n\n\nalso installing the dependencies 'filelock', 'BiocFileCache'\n\n\npackage 'filelock' successfully unpacked and MD5 sums checked\npackage 'BiocFileCache' successfully unpacked and MD5 sums checked\npackage 'rpx' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"MsCoreUtils\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'MsCoreUtils'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"QFeatures\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'QFeatures'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"Spectra\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'Spectra'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"ProtGenerics\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'ProtGenerics'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"PSMatch\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling package(s) 'PSMatch'\n\n\npackage 'PSMatch' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"pheatmap\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'pheatmap'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"limma\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'limma'\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"MSnID\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling package(s) 'MSnID'\n\n\nalso installing the dependencies 'locfit', 'msmsEDA', 'edgeR', 'qvalue', 'interactiveDisplayBase', 'msmsTests', 'AnnotationHub', 'AnnotationDbi'\n\n\npackage 'locfit' successfully unpacked and MD5 sums checked\npackage 'msmsEDA' successfully unpacked and MD5 sums checked\npackage 'edgeR' successfully unpacked and MD5 sums checked\npackage 'qvalue' successfully unpacked and MD5 sums checked\npackage 'interactiveDisplayBase' successfully unpacked and MD5 sums checked\npackage 'msmsTests' successfully unpacked and MD5 sums checked\npackage 'AnnotationHub' successfully unpacked and MD5 sums checked\npackage 'AnnotationDbi' successfully unpacked and MD5 sums checked\npackage 'MSnID' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'matrixStats',\n  'MLmetrics', 'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nBiocManager::install(\"RforMassSpectrometry/SpectraVis\")\n\nBioconductor version 3.18 (BiocManager 1.30.22), R 4.3.2 (2023-10-31 ucrt)\n\n\nInstalling github package(s) 'RforMassSpectrometry/SpectraVis'\n\n\nUsing GitHub PAT from the git credential store.\n\n\nDownloading GitHub repo RforMassSpectrometry/SpectraVis@HEAD\n\n\nPSMatch     (1.6.0 -&gt; dddc17984...) [GitHub]\nmatrixStats (1.2.0 -&gt; 1.3.0       ) [CRAN]\n\n\nInstalling 1 packages: matrixStats\n\n\npackage 'matrixStats' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\downloaded_packages\n\n\nDownloading GitHub repo RforMassSpectrometry/PSMatch@HEAD\n\n\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file 'C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\remotes79e83ea919d0\\rformassspectrometry-PSMatch-dddc179/DESCRIPTION' ... OK\n* preparing 'PSMatch':\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building 'PSMatch_1.7.2.tar.gz'\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file 'C:\\Users\\vicer06\\AppData\\Local\\Temp\\RtmpkPy20w\\remotes79e8313a2e64\\rformassspectrometry-SpectraVis-bbecad1/DESCRIPTION' ... OK\n* preparing 'SpectraVis':\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\nOmitted 'LazyData' from DESCRIPTION\n* building 'SpectraVis_0.3.0.tar.gz'\n\n\n\nInstallation paths not writeable, unable to update packages\n  path: C:/Program Files/R/R-4.3.2/library\n  packages:\n    boot, cluster, codetools, foreign, lattice, MASS, Matrix, mgcv, nlme,\n    rpart, survival\n\n\nOld packages: 'Biostrings', 'bookdown', 'cliqueMS', 'lme4', 'MLmetrics',\n  'prismatic', 'RcppArmadillo', 'renv', 'reticulate', 'testthat'\n\nlibrary(Spectra)\n\nLoading required package: S4Vectors\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: BiocParallel\n\n\nLoading required package: ProtGenerics\n\n\n\nAttaching package: 'ProtGenerics'\n\n\nThe following object is masked from 'package:stats':\n\n    smooth\n\n\nOpen test mzml file (Waters MSe)\n\n# This Waters MSe does not have totIonCurrent \n# mzf &lt;- \"D:/OneDrive - Linköpings universitet/Raw_data/Dust_Florian/LC/LC_pos_mzML/QC_rep2.mzML\"\n\n# Agilent qtof data contain totIonCurrent\nmzf &lt;- \"C:\\\\Users\\\\vicer06\\\\OneDrive - Linköpings universitet\\\\Documents\\\\01_Projects\\\\01_VION_HRMS_MSConvert_Processing_2024\\\\Test_Spectra_Function_R\\\\Drugstd-200ppb_1_A,3_1.mzML\"\n\nsp &lt;- Spectra(mzf)\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.11)\nthan is installed on your system (1.0.12). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nChecking metainfo\n\n#plotting individual spectra\nplotSpectra(sp[2784]) #MS1\n\n\n\nplotSpectra(sp[2785]) #MS2\n\n\n\nwith(spectraData(filterMsLevel(sp, 1)),\n     plot(rtime, totIonCurrent, type = \"l\"))\nabline(v = rtime(sp)[2784], col = \"red\")\n\n\n\nms_2 &lt;- filterPrecursorScan(sp, 2784)"
  },
  {
    "objectID": "qc_hdmse_peak.html#qc-mixture",
    "href": "qc_hdmse_peak.html#qc-mixture",
    "title": "3  Data Analysis",
    "section": "3.1 QC mixture",
    "text": "3.1 QC mixture\nThe following part is for analysis of a QC mixture containing 9 analytes.\n\n#Data is importer for the two data set (mzmine and ms_dial). A reference data frame is constructed (unifi) as well as data frame with theoretical values (qc_compounds).\n\nmzmine &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/QC_mix_MSDIAL_MZmine_Files/qc5rep_hdmse_peakpicking_featurelist_MZMINE.xlsx\", \n    col_types = c(\"text\", \"text\", \"numeric\", \n        \"numeric\", \"text\", \"text\", \"numeric\", \n        \"numeric\", \"text\", \"numeric\", \"numeric\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"numeric\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"numeric\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"numeric\", \n        \"numeric\", \"numeric\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"numeric\", \"numeric\", \"numeric\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"numeric\", \n        \"numeric\", \"numeric\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"numeric\", \"numeric\", \"numeric\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"text\", \"text\", \n        \"text\", \"text\", \"text\", \"numeric\", \n        \"numeric\", \"numeric\"))\n\nms_dial &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/QC_mix_MSDIAL_MZmine_Files/qc3rep_hdmse_peakpicking_featurelist_MSDIAL.xlsx\")\n\nunifi &lt;- data.frame(compound=c(\"acetaminophen\",\"caffeine\",\"leucine enkephaline\",\"reserpine\",\"sulfadimethoxine\",\"sulfaguanidine\",\"terfenadine\",\"val-tyr-val\",\"verapamil\")\n  , mz_unifi=c(152.0697, 195.0870, 556.2756, 609.2787, 311.0801, 215.0589, 472.3197, 380.2173, 455.2892),\n  rt_unifi=c(0.56,1.30,2.37,3.37,2.96,0.31,3.66,1.28,3.26),\n  dt_unifi=c(2.26,2.60,6.41,7.23,4.00,3.01,6.48,5.05,5.66))\n\nqc_compounds &lt;- data.frame(\n  compound=c(\"acetaminophen\",\"caffeine\",\"leucine enkephaline\",\"reserpine\",\"sulfadimethoxine\",\"sulfaguanidine\",\"terfenadine\",\"val-tyr-val\",\"verapamil\")\n  , mz=c(152.0705, 195.0876, 556.2765, 609.2806, 311.0808, 215.0597, 472.3209, 380.2179, 455.2904))\n\n\n#Creating new objects with only the a subset of the data for both data sets. RT and Mobility is rounded to two digits to be compariable to unifi data\n\n#Only keep the rows that corresponds to the compounds in qc_compounds for mzmine data set\nmzmine_subset &lt;- mzmine |&gt; \n  select(id,height,ion_mobility,rt,mz) |&gt;  #to only include those columns in the new data frame\n  mutate(across(c(rt,ion_mobility),round, 2)) |&gt; #round the rt and ion mobility columns values to two decimals\n  mutate(across(mz,round, 4)) |&gt; #round the mz values to four decimals\n  filter(id %in% qc_compounds$compound ) #only keeps the rows in id that is labeled as one of the compounds in qc_compounds data frame\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(c(rt, ion_mobility), round, 2)`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n#msdial data is filtered to excluded the rows where mobility is -1.00 since those are duplicates\n#Also only keep rows that corresponds to the qc compounds\nmsdial_subset &lt;- ms_dial |&gt; \n  select(`Alignment ID`,Average,`Average Rt(min)`,`Average mobility`,`Average Mz`) |&gt; \n  mutate(across(c(`Average Rt(min)`,`Average mobility`),round, 2)) |&gt; \n  mutate(across(`Average Mz`,round, 4)) |&gt;\n  filter(`Average mobility` != -1.00 & `Alignment ID` %in% qc_compounds$compound )\n\n\n\nALTERNATIVE METHOD FOR THE ABOVE WRITTEN CODE\nThe methods used above realize on that the “correct” compounds names have manually been added before to the data before importing it in RStudio. However, to skip having to manually add them, the following part is for finding the correct compounds in mzmine or msdial that corresponds to the ones in UNIFI/ QC_compounds data frame.\nThe criteria for a match is based on the retention time (RT), drift time (DT), and Mass-To-Charge ration(m/z) compared to the values in UNIFI.\n\nFor doing this the join -functions can be used.\n\n\n\n\nR for Data Science (2e) - 19  Joins (hadley.nz)\n\n\n“Mutating joins, which add new variables to one data frame from matching observations in another.” e.g. left_join() and inner_join()\n\n\n“Filtering joins, which filter observations from one data frame based on whether or not they match an observation in another.” e.g. semi_join() and anti_join()\n\n\n\n\n#First import the data (if the first code chunk have not been run for importing data\nmzmine &lt;- read_csv(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/QC_mix_MSDIAL_MZmine_Files/qc5rep_hdmse_peakpicking_featurelist_MZMINE.csv\",show_col_types = FALSE)\n#glimpse(mzmine) \nmsdial &lt;- ms_dial &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/QC_mix_MSDIAL_MZmine_Files/qc3rep_hdmse_peakpicking_featurelist_MSDIAL.xlsx\") \n\nmzmine |&gt; filter(is.na(rt) | is.na(mz) | is.na(ion_mobility)) #check that there are no missing values. Need to have entries for each obesrvation\n\n# A tibble: 0 × 130\n# ℹ 130 variables: id &lt;dbl&gt;, area &lt;dbl&gt;, ion_mobility &lt;dbl&gt;, rt &lt;dbl&gt;,\n#   mz_range:min &lt;dbl&gt;, mz_range:max &lt;dbl&gt;, charge &lt;dbl&gt;, fragment_scans &lt;dbl&gt;,\n#   alignment_scores:rate &lt;dbl&gt;, alignment_scores:aligned_features_n &lt;dbl&gt;,\n#   alignment_scores:align_extra_features &lt;dbl&gt;,\n#   alignment_scores:weighted_distance_score &lt;dbl&gt;,\n#   alignment_scores:mz_diff_ppm &lt;dbl&gt;, alignment_scores:mz_diff &lt;dbl&gt;,\n#   alignment_scores:rt_absolute_error &lt;dbl&gt;, …\n\nmzmine |&gt; count(rt, mz, ion_mobility) |&gt; filter(n&gt;1) #check that the variables uniquely identifies each feature\n\n# A tibble: 0 × 4\n# ℹ 4 variables: rt &lt;dbl&gt;, mz &lt;dbl&gt;, ion_mobility &lt;dbl&gt;, n &lt;int&gt;\n\nmsdial |&gt; filter(is.na(`Average Rt(min)`) | is.na(`Average Mz`) | is.na(`Average mobility`)) #check that there are no missing values. Need to have entries for each obesrvation\n\n# A tibble: 0 × 22\n# ℹ 22 variables: Alignment ID &lt;chr&gt;, Average Rt(min) &lt;dbl&gt;, Average Mz &lt;dbl&gt;,\n#   Average mobility &lt;dbl&gt;, Average CCS &lt;dbl&gt;, Metabolite name &lt;chr&gt;,\n#   Adduct type &lt;chr&gt;, Post curation result &lt;chr&gt;, Fill % &lt;dbl&gt;,\n#   MS/MS assigned &lt;lgl&gt;, Annotation tag (VS1.0) &lt;dbl&gt;,\n#   Manually modified for quantification &lt;lgl&gt;,\n#   Manually modified for annotation &lt;lgl&gt;, S/N average &lt;dbl&gt;,\n#   Spectrum reference file name &lt;chr&gt;, MS1 isotopic spectrum &lt;chr&gt;, …\n\nmsdial |&gt; count(`Average Rt(min)`, `Average Mz`, `Average mobility`) |&gt; filter(n&gt;1) #check that the variables uniquely identifies each feature\n\n# A tibble: 0 × 4\n# ℹ 4 variables: Average Rt(min) &lt;dbl&gt;, Average Mz &lt;dbl&gt;,\n#   Average mobility &lt;dbl&gt;, n &lt;int&gt;\n\n\nTo combine two data frames by using the join -functions (left_join(), inner_join(), right_join(), full_join(), semi_join(), anti_join()) in dplyr -packages.\nleft_join(): output will have the same number of rows as input data frame x.\n\nmzmine2 &lt;- mzmine #copied the data frames only for testing purposes\nunifi2 &lt;- unifi\nmsdial2 &lt;- msdial\n\n#MsDial data does not have mz and rt ranges as MzMine data has, therefore added manually\nmsdial2$mz_min &lt;- msdial2$`Average Mz`-0.005\nmsdial2$mz_max &lt;- msdial2$`Average Mz`+0.005\nmsdial2$rt_min &lt;- msdial2$`Average Rt(min)`-0.08\nmsdial2$rt_max &lt;- msdial2$`Average Rt(min)`+0.08\n\n#finds the compounds from unifi in the mzmine data by using the join function\nsubset_mzmine &lt;- unifi2 |&gt; inner_join(mzmine2, join_by(overlaps(\"mz_unifi\",\"mz_unifi\",\"mz_range:min\", \"mz_range:max\"),overlaps(\"rt_unifi\",\"rt_unifi\",\"rt_range:min\", \"rt_range:max\"))) |&gt; \n  filter(abs(dt_unifi - ion_mobility) &lt; 2) \n\n#subset_msdial &lt;- unifi2 |&gt; inner_join(msdial2, join_by(overlaps(\"mz_unifi\",\"mz_unifi\",\"mz_min\", \"mz_max\"),overlaps(\"rt_unifi\",\"rt_unifi\",\"rt_min\", \"rt_max\"))) |&gt; filter(abs(dt_unifi - `Average mobility`) &lt; 1.7) \n\n#finds the compounds from unifi in the msdial data by using the join function\nsubset_msdial &lt;- unifi2 |&gt; \n  inner_join(msdial2, join_by(overlaps(\"mz_unifi\",\"mz_unifi\",\"mz_min\", \"mz_max\"),overlaps(\"rt_unifi\",\"rt_unifi\",\"rt_min\", \"rt_max\"))) |&gt; \n  group_by(mz_unifi) |&gt; \n  mutate(dt_diff = abs(dt_unifi - `Average mobility`)) |&gt; \n  filter(dt_diff &lt;=min(dt_diff))\n\nno_duplicates_msdial &lt;- subset_msdial[!duplicated(subset_msdial$compound), ] #removes the second duplicate feature\n\nTo easier be able to calculate the mass error, a function was created.\n\\(MassError[ppm]=\\frac{\\textit{m/z}_{theretical}-\\mathit{m/z}_{measured}}{\\mathit{m/z}_{theoretical}}*10^6\\)\n\n#function to calculate the mass error \nmass_error &lt;- function(mz_theoretical,mz_meaured){\n  mass_error &lt;- (mz_theoretical-mz_meaured)/mz_theoretical*10^6\n  return(mass_error)\n}\n\nmass_error(qc_compounds$mz,subset_mzmine$mz)\n\n[1] 4.668887 2.921764 2.480781 4.989491 2.218073 2.324936 3.366355 4.891932\n[9] 2.174436\n\nmass_error(qc_compounds$mz,no_duplicates_msdial$`Average Mz`)\n\n[1] 3.6167435 0.6151083 1.0066936 0.1313024 2.4109492 0.7439795 2.0748605\n[8] 2.7352736 0.4612441\n\n\n\n\nThe following part is used with the “first method” of extracting the correct compounds from msdial and mzmine because ti was written before the other method was written. Sorry for the mess in jumping between different parts.\n\n#calculate the mass accuracy for mzmine, msdial, and unif based on the qc_compounds values. First the m/z values are sorted from small to large so the calculations can be performed row-wise for the correct compound in QC_compounds and the data. Lastly, the results are added to a column in a new object.\n\nqc_compounds &lt;- arrange(qc_compounds, mz)\nmass_errors &lt;- as.data.frame(qc_compounds[1:2]) #create an data frame to add all the mass errors to \n\n#calculate mass errors\nmzmine_subset &lt;- mzmine_subset |&gt; arrange(mz) |&gt; mutate(Mass_error_ppm = round((qc_compounds$mz-mz)/qc_compounds$mz*10^6,3)) \nmsdial_subset &lt;- msdial_subset |&gt; arrange(`Average Mz`) |&gt; mutate(Mass_error_ppm = round((qc_compounds$mz - `Average Mz`) /qc_compounds$mz * 10^6,3))\nunifi &lt;- unifi |&gt; arrange(mz_unifi) |&gt; mutate(Mass_error_ppm = round((qc_compounds$mz - mz_unifi) /qc_compounds$mz * 10^6,3))\n\n#adds the mass errors to the mass error data frame\nmass_errors$Mzmine &lt;- mzmine_subset$Mass_error_ppm\nmass_errors$MsDial &lt;- msdial_subset$Mass_error_ppm\nmass_errors$Unifi &lt;- unifi$Mass_error_ppm\n\n#Adds a column that tells if the Mzmine or MsDial Mass errors are close or far away from the error of Unifi\nmass_errors &lt;- mass_errors |&gt; mutate(mzmine_fromunifi = case_when(abs(Unifi - Mzmine) &gt; 2 ~ \"Large\",\n                                                   abs(Unifi - Mzmine) &lt;= 2 & abs(Unifi - Mzmine) &gt; 0.3 ~ \"Medium\",\n                                                   abs(Unifi - Mzmine) &lt;= 0.3 ~ \"Small\")) |&gt; \n  mutate(msdial_fromunifi = case_when(abs(Unifi - MsDial) &gt; 2 ~ \"Large\",\n                                                   abs(Unifi - MsDial) &lt;= 2 & abs(Unifi - MsDial) &gt; 0.3 ~ \"Medium\",\n                                                   abs(Unifi - MsDial) &lt;= 0.3 ~ \"Small\"))\n\nNext parts of chunks are for plotting the data for the QC compounds.\n\n#Plot the mass errors towards the theoretical m/z values\nmass_errors$msdial_fromunifi &lt;- as.factor(mass_errors$msdial_fromunifi)\nmass_errors$mzmine_fromunifi &lt;- as.factor(mass_errors$mzmine_fromunifi)\n  \np &lt;- ggplot(data=mass_errors, mapping=aes(x=mz))+\n  geom_point(aes(y=Mzmine, colour=\"Mzmine\", shape=\"Mzmine\", size=mzmine_fromunifi), alpha = 0.7)+ #mass erros values from mzmine and adds size of the plots according to how far away they are from unifi\n  geom_point(aes(y=MsDial, colour=\"MsDial\", shape=\"MsDial\", size=msdial_fromunifi), alpha = 0.7)+ #mass erros values from msdial and adds size of the plots according to how far away they are from unifi\n  geom_line(aes(y=Unifi, colour=\"Unifi\"),size=0.5)+ #plot Unifi data \n  \n  scale_size_manual(name=\"Distance from Unifi\", values = c(\"Large\"=4.2, \"Medium\"=2.8, \"Small\"=2))+\n  scale_shape_manual(values = c(\"Mzmine\" = 19, \"MsDial\" = 17)) +\n  scale_colour_manual(values = c(\"Mzmine\" = \"darkred\", \"MsDial\" = \"black\", \"Unifi\" = \"darkgrey\")) + #colours of points\n  labs(fill = \"\", y = \"Mass Accuracy [ppm]\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\"))) +\n  \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\", linewidth = 0.1) + #adds horzontal line at y=0\n  \n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    aspect.ratio = 0.5,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.position = \"right\",\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    #legend.title = element_blank(), #removes the title of the legend\n    legend.title = element_text(size=9),\n    legend.margin = margin(0.001, 1, 0.5, 0.5),)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np  + geom_text(aes(x=mz+10, y=Unifi,label=compound), size=2, colour=\"red4\",\n               nudge_x = 0.25, nudge_y = 0.25, \n               check_overlap = FALSE) #adds a text for the mean point\n\n\n\n#+ guides(size = \"none\")\n\n\n#RT and DT difference between MS-Dial and Mzmine compared to UNIFI\n\n#adding and then renaming the RT columns from each file\nrt_difference &lt;- data.frame(qc_compounds[,], msdial_subset[,3], mzmine_subset[,4], unifi[,3]) |&gt; rename(MsDial_RT=\"Average.Rt.min.\", MzMine_RT=\"rt\", Unifi_RT=\"unifi...3.\")\n#adding and then renaming the DT columns from each file\ndt_difference &lt;- data.frame(qc_compounds[,], msdial_subset[,4], mzmine_subset[,3], unifi[,4]) |&gt; rename(MsDial_DT=\"Average.mobility\", MzMine_DT=\"ion_mobility\", Unifi_DT=\"unifi...4.\")\n\ndt_difference &lt;- dt_difference |&gt; \n  mutate(\"diff_msdial\" = MsDial_DT - Unifi_DT) |&gt; \n  mutate(\"diff_mzmine\" = MzMine_DT - Unifi_DT)\n\n#rt_difference &lt;- rt_difference |&gt; mutate(mzmine_fromunifi = case_when(abs(Unifi - Mzmine) &gt; 2 ~ \"Large\",\n#                                                   abs(Unifi_RT - MzMine_RT) &lt;= 2 & abs(Unifi_RT - MzMine_RT) &gt; 0.3 ~ \"Medium\",\n#                                                   abs(Unifi_RT - MzMine_RT) &lt;= 0.3 ~ \"Small\")) |&gt; mutate(msdial_fromunifi = case_when(abs(Unifi_RT - MsDial_RT) &gt; 2 ~ \"Large\",\n#                                                   abs(Unifi_RT - MsDial_RT) &lt;= 2 & abs(Unifi_RT - MsDial_RT) &gt; 0.3 ~ \"Medium\",\n#                                                   abs(Unifi_RT - MsDial_RT) &lt;= 0.3 ~ \"Small\"))\n\nrt_difference_long &lt;- rt_difference |&gt; pivot_longer(cols = 3:5,\n                            names_to = \"Software\",\n                            values_to = \"RT_softwares\") \n\ndt_difference_long &lt;- dt_difference |&gt; pivot_longer(cols = 3:5,\n                            names_to = \"software_name\",\n                            values_to = \"DT_softwares\") \n\n\nrt_difference_long |&gt; filter(Software != \"MsDial_RT\" & Software != \"MzMine_RT\")\n\n# A tibble: 9 × 4\n  compound               mz Software RT_softwares\n  &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;\n1 acetaminophen        152. Unifi_RT         0.56\n2 caffeine             195. Unifi_RT         1.3 \n3 sulfaguanidine       215. Unifi_RT         0.31\n4 sulfadimethoxine     311. Unifi_RT         2.96\n5 val-tyr-val          380. Unifi_RT         1.28\n6 verapamil            455. Unifi_RT         3.26\n7 terfenadine          472. Unifi_RT         3.66\n8 leucine enkephaline  556. Unifi_RT         2.37\n9 reserpine            609. Unifi_RT         3.37\n\n\n\n#Plot of RT vs theoretical m/z values for the different softwares\nb &lt;- ggplot(data=rt_difference_long, mapping=aes(x=mz, y=RT_softwares))+\n  geom_bar(stat = \"identity\",position=position_dodge(), aes(fill=Software))+\n  \n  scale_fill_manual(values = c(\"MzMine_RT\" = \"darkred\", \"MsDial_RT\" = \"darkgreen\", \"Unifi_RT\" = \"darkgrey\")) + #colours of points\n  labs( y = \"Retention time [min]\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\"))) +\n  scale_y_continuous(limit=c(0,4),expand = c(0,0))+\n  \n  #geom_text(aes(x=mz, y=RT_softwares, label=compound), size=2, colour=\"red4\",\n  #             nudge_x = 0.25, nudge_y = 0.25, \n  #             check_overlap = FALSE)+\n  \n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    #aspect.ratio = 1,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    #legend.position = c(0.85, 0.85),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n    #legend.margin = margin(0.001, 1, 0.5, 0.5)\n)\n\nb + geom_label(data=rt_difference, mapping=aes(x=mz, y=MsDial_RT, label=compound),\n              size=2, colour=\"black\",\n              nudge_x = 0.25, nudge_y = 0.15) \n\n\n\n\n\n#Plot of DT vs theoretical m/z values for the different softwares\nd &lt;- ggplot(data=dt_difference_long, mapping=aes(x=mz, y=DT_softwares))+\n  geom_bar(stat = \"identity\",position=position_dodge(), aes(fill=software_name))+\n  \n  scale_fill_manual(values = c(\"MzMine_DT\" = \"darkred\", \"MsDial_DT\" = \"darkgreen\", \"Unifi_DT\" = \"darkgrey\")) +\n  labs( y = \"Drift Time [ms]\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\"))) +\n  scale_y_continuous(limit=c(0,10),expand = c(0,0))+ #removes the gap between the bars and the x-axis\n  \n\n  geom_line(data=dt_difference, color=\"black\", aes(x=mz, y=Unifi_DT),size = 0.5, linetype = \"dashed\")+ #plots black line for Unifi_DT\n  \n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n)\n\nd + geom_label(data=dt_difference, mapping=aes(x=mz-10, y=MzMine_DT, label=compound),\n              size=2, colour=\"black\", nudge_y = 0.7, \n              ) #hjust=\"inward\"\n\n\n\nd\n\n\n\n#Plot DT only for MSDial and adds regression line\nd1 &lt;- dt_difference |&gt; filter(diff_msdial&gt;0.5) |&gt; #exlucde \"outlier\"\n  ggplot(mapping=aes(x=mz, y=diff_msdial))+\n  geom_point(size=1)+  \n  geom_smooth(method=\"loess\", size=0.6, se=FALSE, linetype=\"dashed\", color=\"darkred\")+\n  stat_cor(aes(label=..rr.label..), label.x=400, label.y=1.2, size=3, colour=\"black\", r.digits = 5)+ #adds R^2\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    aspect.ratio = 1,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.position = c(0.25, 0.85),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(), #removes the title of the legend\n    legend.margin = margin(0.001, 1, 0.5, 0.5))\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\nd1\n\nWarning: The dot-dot notation (`..rr.label..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(rr.label)` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n#Plot DT only for Mzmine and adds regression line\nd2 &lt;- dt_difference |&gt; filter(compound != \"terfenadine\") |&gt; \n  ggplot(mapping=aes(x=mz, y=diff_mzmine))+\n  geom_point(size=1)+  \n  geom_smooth(method=\"loess\", size=0.6, se=FALSE, linetype=\"dashed\", color=\"darkgreen\")+\n  stat_cor(aes(label=..rr.label..), label.x=200, label.y=1.4, size=3, colour=\"black\", r.digits = 5)+ #adds R^2\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    aspect.ratio = 1,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.position = c(0.25, 0.85),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(), #removes the title of the legend\n    legend.margin = margin(0.001, 1, 0.5, 0.5))\nd2\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n#Show both Mzmine and Msdial\nggarrange(d1, d2,\n          labels = c(\"A\", \"B\"),\n          #ncol = 1, nrow = 2,\n          widths = 2, heights = 10)\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "qc_hdmse_peak.html#drug-mixture",
    "href": "qc_hdmse_peak.html#drug-mixture",
    "title": "3  Data Analysis",
    "section": "3.2 Drug mixture",
    "text": "3.2 Drug mixture\nThe data used for this section is of a mixture of different drugs (200 ppb) including some Isotopically labeled internal standards (IS, 100 ppb). The data has been measured in ESI(+)-LC-IMS-HRMS (MSe mode, HDMSe) with different settings, here called old and new settings where the later is supposed to be more suitable for labile compounds. The data was processed in MZmine.\n\n#Import the data from mzmine, and the excel sheet containing the target compounds and IS compounds.\ndata_drugmix &lt;- read_csv(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/QC_mix_MSDIAL_MZmine_Files/new_old_settings_drugmix_featurelist_MzMine.csv\", show_col_types = FALSE) |&gt; \n  select(-`charge`,-`fragment_scans`,-`alignment_scores:rate`, -`alignment_scores:aligned_features_n`,-`alignment_scores:align_extra_features`,-`alignment_scores:weighted_distance_score`,-`alignment_scores:mz_diff_ppm`,-`alignment_scores:mz_diff`,-`alignment_scores:rt_absolute_error`,-`alignment_scores:ion_mobility_absolute_error`,-`intensity_range:min`,-`intensity_range:max`)\n\ntarget_drugs &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/Illicit_Drugs_Files/illicit drugs CS-IS_data.xlsx\", na = \"NA\") |&gt; \n  filter(Class==\"Analyte\") |&gt; \n  mutate(rt_target_min = Vion_RT - 0.05) |&gt; \n  mutate(rt_target_max = Vion_RT + 0.05) |&gt; \n  select(-`Monoisomass`, -`Adduct_ion`,  -`Vion_observed_mz`, -`Agilent_observed_mz`, -`Agilent_RT`)\n\n\n#find the target compounds in the drug_mix data\nfound_drugs &lt;- target_drugs |&gt; inner_join(data_drugmix, join_by(overlaps(\"Theor_adduct_mz\",\"Theor_adduct_mz\",\"mz_range:min\", \"mz_range:max\"))) |&gt; \n  select(1:11, mz, height, everything()) #reorder columns\n\nfiltered_found_drugs &lt;-found_drugs |&gt; filter(\n  !(`height` &lt; 500), #removes rows with height less than 500\n  !(!is.na(Vion_RT) & (\"rt\" &lt; \"rt_target_min\" & \"rt\" &gt; \"rt_target_max\")) #for those with prev. measured RT, compares them with currect RT\n) |&gt; \n  slice_max(by=Compound, height) #to remove multiple features assigned the same compound by only keeping the ones with largest height. Due to not having any DT values to compare to filter the data more\n\n\n#calculate the mass error and height and area ratio between new and old data\nfiltered_found_drugs &lt;- filtered_found_drugs |&gt; \n  mutate(Mass_error_ppm = mass_error(Theor_adduct_mz, mz), .after = \"mz\")|&gt;  #adds the mass error (calculated with the function) to a new column after m/z values\n  mutate(height_ratio = `datafile:Drugdtd-200ppb-newsetting_1_A,2_1.mzML:height`/`datafile:Drugstd-200ppb_1_A,3_1.mzML:height`, .after=\"height\") |&gt; #adds the ratio between the height of the old and new settings \n  mutate(area_ratio = `datafile:Drugdtd-200ppb-newsetting_1_A,2_1.mzML:area`/`datafile:Drugstd-200ppb_1_A,3_1.mzML:area`, .after=\"area\") |&gt; \n  mutate(diff_DT = ion_mobility - DT_UNIFI, .after=\"ion_mobility\") #different in ion mobility for the processed data compared to UNIFI\n\n\np1 &lt;-ggplot(filtered_found_drugs, mapping = aes(x=mz, y=area_ratio, label=Compound))+ #plot area ratio\n  geom_point()+\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"red\", linewidth = 0.1) + #adds horzontal line at y=0\n  \n  geom_label_repel(size = 2.5,\n                   point.padding = NA, # additional padding around each point\n                   min.segment.length = 0, # draw all line segments\n                   force=2,\n                   nudge_x=5, nudge_y=-0.03\n                   )+\n  \n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n)\np2 &lt;- ggplot(filtered_found_drugs, mapping=aes(x=mz,y=height_ratio,label=Compound))+ #plot height ratio\n  geom_point()+\n  geom_hline(yintercept = 1, linetype = \"dashed\", color = \"red\", linewidth = 0.1) + #adds horzontal line at y=0\n  \n  geom_label_repel(size = 2.5,\n                   point.padding = NA, # additional padding around each point\n                   min.segment.length = 0, # draw all line segments\n                   force=2,\n                   nudge_x=5, nudge_y=-0.03\n                   )+\n  \n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n) \n\nggarrange(p1, p2,\n          labels = c(\"A\", \"B\"),\n          #ncol = 1, nrow = 2,\n          widths = 2, heights = 10)\n\n\n\n\n\n#Plot of DT difference between MZmine and UNIFI\np3 &lt;- filtered_found_drugs |&gt; \n  ggplot(mapping=aes(x=Theor_adduct_mz, y=diff_DT))+\n  geom_point(size=1)+  \n  geom_smooth(method=\"loess\", size=0.6, se=FALSE, linetype=\"dashed\", color=\"darkblue\")+\n  stat_cor(aes(label=..rr.label..), label.x=200, label.y=1.2, size=3, colour=\"black\", r.digits = 5)+ #adds R^2\n\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    aspect.ratio = 1,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.position = c(0.25, 0.85),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(), #removes the title of the legend\n    legend.margin = margin(0.001, 1, 0.5, 0.5))\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_cor()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\np4 &lt;- filtered_found_drugs |&gt; \n  ggplot(mapping=aes(x=DT_UNIFI, y=diff_DT))+\n  geom_point(size=1)+  \n  geom_smooth(method=\"loess\", size=0.6, se=FALSE, linetype=\"dashed\", color=\"orange\")+\n  stat_cor(aes(label=..rr.label..), label.x=4, label.y=1.2, size=3, colour=\"black\", r.digits = 5)+ #adds R^2\n\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    aspect.ratio = 1,  # Set aspect ratio\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.position = c(0.25, 0.85),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(), #removes the title of the legend\n    legend.margin = margin(0.001, 1, 0.5, 0.5))\np4\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_cor()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\nggarrange(p3, p4,\n          labels = c(\"A\", \"B\"),\n          #ncol = 1, nrow = 2,\n          widths = 2, heights = 10)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_cor()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_cor()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n#Import and find the IS compounds in the processed durg mixture data\ntarget_IS &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/Illicit_Drugs_Files/illicit drugs CS-IS_data.xlsx\", na = \"NA\") |&gt; \n  filter(Class==\"IS\") |&gt; \n  select(-`Monoisomass`, -`Adduct_ion`,  -`Vion_observed_mz`, -`Agilent_observed_mz`, -`Agilent_RT`)\n\n\nfound_IS &lt;- target_IS |&gt; inner_join(data_drugmix, join_by(overlaps(\"Theor_adduct_mz\",\"Theor_adduct_mz\",\"mz_range:min\", \"mz_range:max\"))) |&gt; \n  select(1:11, mz, height, everything()) |&gt;  #reorder columns \n  mutate(Mass_error_ppm = mass_error(Theor_adduct_mz, mz), .after = \"mz\")\n  \nfiltered_found_IS &lt;- found_IS |&gt;  slice_min(by=Compound, abs(Mass_error_ppm)) #only keeps the rows with the smallest absolut mass error for each compound\n\n\n#normalise the heights for the new and old with the IS corresponding IS\nnormalisation_IS &lt;- inner_join(x=filtered_found_drugs, y=filtered_found_IS, join_by(x$Formula == y$Formula)) |&gt; \n  mutate(normalised_height_NEW = `datafile:Drugdtd-200ppb-newsetting_1_A,2_1.mzML:height.x`/`datafile:Drugdtd-200ppb-newsetting_1_A,2_1.mzML:height.y`, .after=\"height.x\") |&gt; \n  mutate(normalised_height_OLD = `datafile:Drugstd-200ppb_1_A,3_1.mzML:height.x`/`datafile:Drugstd-200ppb_1_A,3_1.mzML:height.y`, .after=\"height.x\") |&gt; \n  mutate(RT_diff = rt.x-rt.y, .after=\"rt.x\") |&gt; \n  mutate(mz_error_diff = Mass_error_ppm.x-Mass_error_ppm.y, .after=\"mz.x\") |&gt; \n  mutate(DT_diff = ion_mobility.x-ion_mobility.y, .after=\"ion_mobility.x\")\n\n######################################################################\nnormalisation_IS$plot &lt;- NA #empy column to put plot in\nplot_object &lt;- ggplot(data = normalisation_IS, aes(x=normalised_height_OLD, y=normalised_height_NEW))+geom_point(colour=\"darkgreen\")+theme_minimal()+theme(legend.position=\"none\")  #create plot object to put in empty colum in the table\n\n#library(gt) #package for makeing tables + library(gtExtras) # plot in table\n\n#creates a table of selected column from normalisation_IS data\n gt_tab &lt;- normalisation_IS |&gt; select(Compound.x, Formula, RT_diff, DT_diff, mz_error_diff, normalised_height_OLD, normalised_height_NEW,plot) |&gt; \n    gt() |&gt;\n   tab_options(table.font.color=\"black\")|&gt; \n    tab_header(\n      title=md(\"**Drug mixture - 200 ppb**\"), #**to make bold\n      subtitle =md(\"For **new** and **old** MS settings analytes with corresponding *Internal Standard*\") #* to make italic\n      ) |&gt; \n    fmt_number(columns = c(RT_diff, DT_diff, mz_error_diff,normalised_height_OLD, normalised_height_NEW), decimals=3) |&gt;  #to formate numbers, can select specific columns to display certain nr. of deicmals for example. \n    tab_footnote(\n    footnote = \"Isomeric compounds. They have been matched to the same feature, hence, the reason for the identical values.\",\n    locations = cells_body(columns = Compound.x, rows = 1:2)\n  ) |&gt; \n    tab_footnote(\n    footnote = md(\"The large mass error difference between *analyte* and *IS* is due to a larger mass error for the corresponding IS (10.9 compared to analyte -0.101)\"),\n    locations = cells_body(\n      columns = mz_error_diff,\n      rows = mz_error_diff == min((mz_error_diff))\n    )\n  ) |&gt; \n    tab_row_group(\n    label = md(\"*Methamphetamine-d9*\"), #or can use gt(groupname_col=\"Compound.y\") to add groupnames for all analytes\n    rows = 1:2\n  ) |&gt; \n    tab_spanner(\n    label = \"Analyte Information\",\n    columns = c(Compound.x, Formula)\n  ) |&gt; \n    tab_spanner(\n    label = md(\"Normalisation as &lt;br&gt; *analyte_height/IS_height*\"),\n    columns = c(normalised_height_OLD, normalised_height_NEW)\n  )|&gt; \n    tab_spanner(\n    label = md(\"Differences as &lt;br&gt; *Analyte* - *IS*\"),\n    columns = c(RT_diff, DT_diff, mz_error_diff)\n  ) |&gt; \n    cols_label(\n    Compound.x = html(\"Analyte Name\"),\n    Formula = html(\"Molecular formula\"),\n    RT_diff = html(\"Retention Time ,&lt;br&gt;min\"),\n    DT_diff = html(\"Drift Time ,&lt;br&gt;ms\"),\n    mz_error_diff = html(\"Mass Error,&lt;br&gt;ppm\"),\n    normalised_height_OLD = html(\"OLD\"),\n    normalised_height_NEW = html(\"NEW\"),\n  ) |&gt; \n   tab_style(\n    style = list(\n      cell_fill(color = \"lightcyan\"),\n      cell_text(weight = \"bold\")\n      ),\n    locations = cells_body(\n      columns = normalised_height_OLD\n    ) \n  ) |&gt; \n     tab_style(\n    style = list(\n      cell_fill(color = \"#F9E3D6\"),\n      cell_text(weight = \"bold\")\n      ),\n    locations = cells_body(\n      columns = normalised_height_NEW\n    ) \n  ) |&gt; \n    tab_style(\n    style = list(\n      cell_text(color=\"red\")\n      ),\n    locations = cells_body(\n      columns = mz_error_diff,\n      rows = mz_error_diff ==min((mz_error_diff))\n    ) \n  )|&gt; \n   text_transform(\n     locations = cells_body(columns = plot),\n     fn = function(x) {\n       plot_object |&gt; \n         ggplot_image((height=px(200)))\n     }\n   )\ngt_tab\n\n\n\n\n\n  \n    \n      Drug mixture - 200 ppb\n    \n    \n      For new and old MS settings analytes with corresponding Internal Standard\n    \n    \n      \n        Analyte Information\n      \n      \n        Differences as  Analyte - IS\n      \n      \n        Normalisation as  analyte_height/IS_height\n      \n      plot\n    \n    \n      Analyte Name\n      Molecular formula\n      Retention Time ,min\n      Drift Time ,ms\n      Mass Error,ppm\n      OLD\n      NEW\n    \n  \n  \n    \n      Methamphetamine-d9\n    \n    Phentermine1\nC10H15N\n0.017\n0.000\n1.115\n0.642\n0.365\n\n    Methamphetamine1\nC10H15N\n0.017\n0.000\n1.115\n0.642\n0.365\n\n    \n      \n    \n    MDMA\nC11H15NO2\n0.015\n−0.024\n−1.235\n1.716\n1.290\n\n    MDEA\nC12H17NO2\n0.012\n−0.024\n−0.635\n1.663\n2.001\n\n    Benzoylecgonine\nC16H19NO4\n0.000\n0.000\n−0.404\n2.419\n2.320\n\n    THC-COOH\nC21H28O4\n−0.002\n−0.095\n2 −11.002\n3.269\n2.502\n\n  \n  \n  \n    \n      1 Isomeric compounds. They have been matched to the same feature, hence, the reason for the identical values.\n    \n    \n      2 The large mass error difference between analyte and IS is due to a larger mass error for the corresponding IS (10.9 compared to analyte -0.101)\n    \n  \n\n\n\n#gt_tab |&gt; gtsave(filename = \"tab_1.html\") #saves the table in HTML format\n#gt_tab |&gt; gtsave(filename = \"tab_1.tex\") #saves the table in LaTEX format\n#gt_tab |&gt; gtsave(filename = \"tab_1.docx\") #saves the table in WORD format\n\n\n\nagg_iris = normalisation_IS  |&gt; \n    group_by(Compound.x)  |&gt; \n    reframe(\n        normalised_height= list(normalised_height_OLD, normalised_height_NEW),\n    )\n\nagg_iris |&gt; gt() |&gt; gt_plt_sparkline(column = normalised_height)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n  \n    \n      Compound.x\n      normalised_height\n    \n  \n  \n    Benzoylecgonine\n          2.4\n    Benzoylecgonine\n          2.3\n    MDEA\n          1.7\n    MDEA\n          2.0\n    MDMA\n          1.7\n    MDMA\n          1.3\n    Methamphetamine\n          0.6\n    Methamphetamine\n          0.37\n    Phentermine\n          0.6\n    Phentermine\n          0.37\n    THC-COOH\n          3.3\n    THC-COOH\n          2.5"
  },
  {
    "objectID": "qc_hdmse_peak.html#drug-mix-2024-03-20",
    "href": "qc_hdmse_peak.html#drug-mix-2024-03-20",
    "title": "3  Data Analysis",
    "section": "3.3 Drug mix 2024-03-20",
    "text": "3.3 Drug mix 2024-03-20\nThe drug mixture has been measured as above, but has been measured with different settings such as LC-gradient, desolvation temperature, etc.\n\n#Import the data and calculate the mass error depending on the the adduct the compounds is found as \ndrugmix &lt;- read_excel(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/Illicit_Drugs_Files/illicit drugs CS-IS_data - MassErrors_Calculations.xlsx\", \n    sheet = \"Drugmix_240320_21 (2)\") \ndrugmix &lt;- drugmix |&gt; \n  mutate(Mass_acc=case_when(`mode...14` == \"[M+H]+\" ~ mass_error(Theor_adduct_mz, `m/z...9`),\n                            `mode...14` == \"[M+Na]+\" ~ mass_error(`Theor. [M+Na]+`, `m/z...9`),\n                            `mode...14` == \"[M+NH4]+\" ~ mass_error(`Theor. [M+NH4]+`, `m/z...9`)), .after=`mode...14`) |&gt; \n  mutate(Mass_acc2=case_when(`mode...21` == \"[M+H]+\" ~ mass_error(Theor_adduct_mz, `m/z...16`),\n                            `mode...21` == \"[M+Na]+\" ~ mass_error(`Theor. [M+Na]+`, `m/z...16`),\n                            `mode...21` == \"[M+NH4]+\" ~ mass_error(`Theor. [M+NH4]+`, `m/z...16`)), .after=`mode...21`) |&gt; \n  mutate(Mass_acc3=case_when(`mode...28` == \"[M+H]+\" ~ mass_error(Theor_adduct_mz, `m/z...23`),\n                            `mode...28` == \"[M+Na]+\" ~ mass_error(`Theor. [M+Na]+`, `m/z...23`),\n                            `mode...28` == \"[M+NH4]+\" ~ mass_error(`Theor. [M+NH4]+`, `m/z...23`)), .after=`mode...28`) |&gt; \n  mutate(Mass_acc4=case_when(`mode...35` == \"[M+H]+\" ~ mass_error(Theor_adduct_mz, `m/z...30`),\n                            `mode...35` == \"[M+Na]+\" ~ mass_error(`Theor. [M+Na]+`, `m/z...30`),\n                            `mode...35` == \"[M+NH4]+\" ~ mass_error(`Theor. [M+NH4]+`, `m/z...30`)), .after=`mode...35`) |&gt; \n  mutate(Mass_acc5=case_when(`mode...42` == \"[M+H]+\" ~ mass_error(Theor_adduct_mz, `m/z...37`),\n                            `mode...42` == \"[M+Na]+\" ~ mass_error(`Theor. [M+Na]+`, `m/z...37`),\n                            `mode...42` == \"[M+NH4]+\" ~ mass_error(`Theor. [M+NH4]+`, `m/z...37`)), .after=`mode...42`)\n\n##DID NOT WORK AS INTENDEN DUE TO THE FORMAT OF THE EXCEL SHEET##########\ndrugmix |&gt; \n  pivot_longer(cols = c(`detector count...13`, `detector count...20`, `detector count...27`, `detector count...34`,`detector count...41`),\n                            names_to = \"detectorcoun_comb\",\n                            values_to = \"Intensities\") \n\n# A tibble: 105 × 53\n   Compound           Class Formula Monoisomass Theor_adduct_mz `Theor. [M+Na]+`\n   &lt;chr&gt;              &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt;           &lt;dbl&gt;            &lt;dbl&gt;\n 1 3,4-methylenediox… Anal… C10H13…        179.            180.             202.\n 2 3,4-methylenediox… Anal… C10H13…        179.            180.             202.\n 3 3,4-methylenediox… Anal… C10H13…        179.            180.             202.\n 4 3,4-methylenediox… Anal… C10H13…        179.            180.             202.\n 5 3,4-methylenediox… Anal… C10H13…        179.            180.             202.\n 6 6-acetylmorphine   Anal… C19H21…        327.            328.             350.\n 7 6-acetylmorphine   Anal… C19H21…        327.            328.             350.\n 8 6-acetylmorphine   Anal… C19H21…        327.            328.             350.\n 9 6-acetylmorphine   Anal… C19H21…        327.            328.             350.\n10 6-acetylmorphine   Anal… C19H21…        327.            328.             350.\n# ℹ 95 more rows\n# ℹ 47 more variables: `Theor. [M+NH4]+` &lt;dbl&gt;,\n#   `UNIFI - HDMSe-destemp450_240320` &lt;lgl&gt;, `m/z...9` &lt;dbl&gt;,\n#   `RT [min]...10` &lt;dbl&gt;, DT...11 &lt;dbl&gt;, CCS...12 &lt;dbl&gt;, mode...14 &lt;chr&gt;,\n#   Mass_acc &lt;dbl&gt;, `UNIFI - HDMSe-gradientchange_240320` &lt;lgl&gt;,\n#   `m/z...16` &lt;dbl&gt;, `RT [min]...17` &lt;dbl&gt;, DT...18 &lt;dbl&gt;, CCS...19 &lt;dbl&gt;,\n#   mode...21 &lt;chr&gt;, Mass_acc2 &lt;dbl&gt;, …\n\n#################################\n\n#plot the intensities of the compounds for each type of measurement\nf1 &lt;- ggplot(drugmix, aes(x=Theor_adduct_mz, y=`detector count...13`))+\n  geom_point()+\n  geom_point(aes(x=Theor_adduct_mz, y=`detector count...20`), color=\"red\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`detector count...27`), color=\"green\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`detector count...34`), color=\"blue\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`detector count...41`), color=\"orange\")+\n  \n  labs( y = \"Detector Count\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\"))) +\n  \n    theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n)\n\n#plot the mass error for the compounds for each measurement\nf2 &lt;-ggplot(drugmix, aes(x=Compound, y=Mass_acc))+\n  geom_point()+\n  geom_point(aes(y=Mass_acc2), color=\"red\")+\n  geom_point(aes(y=Mass_acc3), color=\"green\")+\n  geom_point(aes(y=Mass_acc4), color=\"blue\")+\n  geom_point(aes(y=Mass_acc5), color=\"orange\")+\n  \n  labs( y = \"Mass Accuracy [ppm]\", x=\" \") +\n  \n    theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9, angle = 45, hjust = 1),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\", ),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n)\n\n#plot the CCS for the compounds for each measurement\nf3 &lt;- ggplot(drugmix, aes(x=Theor_adduct_mz, y=`CCS...12`))+\n  geom_point()+\n  geom_point(aes(x=Theor_adduct_mz, y=`CCS...19`), color=\"red\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`CCS...26`), color=\"green\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`CCS...33`), color=\"blue\")+\n  geom_point(aes(x=Theor_adduct_mz, y=`CCS...40`), color=\"orange\")+\n  \n  labs( y = \"Drift Time\", x=expression(paste(\"Theoretical \",italic(\"m/z\"), \" values\"))) +\n  \n    theme_minimal()+\n  theme(\n    panel.background = element_rect(fill = \"white\"),  # Set white background\n    panel.grid.major = element_blank(),  # Remove grid lines\n    panel.grid.minor = element_blank(),  # Remove grid lines\n    axis.text = element_text(size = 9),  # Increase font size of axis text\n    axis.title.y = element_text(size = 9,face = \"bold\"),  # Make y-axis label bold and italic\n    axis.text.y = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.title.x = element_text(size = 10,face = \"bold\"),\n    axis.text.x = element_text(color = \"black\", size = 9),  # Make x-axis text bold\n    axis.ticks.x = element_line(color = \"black\"),  # Add ticks to x-axis in black color\n    axis.ticks.y = element_line(color = \"black\"),  # Add ticks to y-axis in black color\n    plot.margin = margin(0.5, 0.5, 0.4, 0.5, \"cm\"),  # Set plot margins\n    legend.text=element_text(size=9),\n    legend.background = element_rect(fill=\"white\",\n                                   size=0.5, linetype=\"solid\", \n                                   colour =\"black\"),\n    legend.title = element_blank(),\n)\n    \nggarrange(f2, f1, f3,\n          labels = c(\"A\", \"B\", \"C\"),\n          ncol=3)\n\n\n\nf3\n\n\n\n\n\nTidyMass\n\n#source(\"https://www.tidymass.org/tidymass-packages/install_tidymass.txt\")\n#install_tidymass(from = \"tidymass.org\")\n\nEstimatePrecursorMz\n\n#library(Spectra)\n#fls &lt;- system.file(\"C:/Users/vicer06/OneDrive - Linköpings universitet/Documents/01_Projects/01_VION_HRMS_MSConvert_Processing_2024/Drugmixture_MSconvert_Processing_240321\")\n#sps_sciex &lt;- Spectra(fls, source = MsBackendMzR())\n#sps_sciex"
  }
]